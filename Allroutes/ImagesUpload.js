const express = require("express");
const ImagesUploadsRouter = express.Router();
const AsyncHandler = require("express-async-handler");
const Banner = require("../Allmodels/ImagesSchema");
const cloudinary = require("../utilFiles/cloudinary");
const upload = require("../utilFiles/multerFiles");

//Upload all the content
ImagesUploadsRouter.post(
    "/post-banner",
    upload.single("file"),
    AsyncHandler(async (req, res) => {
        console.log(req.file.path)
        // if (req.body.file) {

        let result = await cloudinary.uploader.upload(req.file.path);

        const postingbanner = new Banner({
            avatar: result.secure_url,
            cloudinary_id: result.public_id,
        });

        await postingbanner.save();
        res.send({ message: "ðŸ¤© Banner Posted Successfully" });
        // }
        // cloudinary.uploader.upload(req.body.file)
        //     .then(function (image) {
        //         console.log();
        //         console.log("** File Upload (Promise)");
        //         console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
        //         console.log("* " + image.public_id);
        //         console.log("* " + image.secure_url);
        //     })
        //     .catch(function (err) {
        //         console.log();
        //         console.log("** File Not Uploaded (Promise)");
        //         if (err) { console.warn(err); }
        //     });
    })
);

ImagesUploadsRouter.get(
    "/all-banners",
    AsyncHandler(async (req, res) => {
        let IMU = await Banner.find();
        res.send(IMU);
    })
);

ImagesUploadsRouter.delete(
    "/delete-banner/:_id",
    AsyncHandler(async (req, res, next) => {
        console.log(req.params._id);
        let IMU = await Banner.findByIdAndRemove(req.params._id);
        if (IMU.cloudinary_id) {
            await cloudinary.uploader.destroy(IMU.cloudinary_id);
        }
        res.send(IMU);
    })
);

ImagesUploadsRouter.delete(
    "/del-all-banners",
    AsyncHandler(async (req, res, next) => {
        let IM = await Banner.find();
        console.log(IM);
        await IM.forEach((element) => {
            console.log(element.cloudinary_id);
            if (element.cloudinary_id) {
                cloudinary.uploader.destroy(element.cloudinary_id);
                console.log(element.cloudinary_id);
            }
        });
        let IMU = await Banner.deleteMany();
        res.send(IMU);
    })
);
module.exports = ImagesUploadsRouter;

/*{
   message: 'Unknown API key 237545431193796 ',
  name: 'Error',
  http_code: 401
 } */
